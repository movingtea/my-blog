import getAllTags from "../libs/tags";
import {Button, Chip, Container, Grid, Link} from "@mui/material";
import Head from 'next/head'
import Layout from "../compontents/Layout/Layout";
import HeaderBlock from "../compontents/HeaderBlock/HeaderBlock";
import styles from '../styles/tags.module.css'
import {useState} from "react";
import {filterTag} from "../libs/articles";
import {Paper} from "@material-ui/core";
import Image from "next/image";

export default function Tags(data) {
    const topTags = (JSON.parse(data.tags).data)
    const [selectedChip, setSelectedChip] = useState()
    const [filteredArticles, setFilteredArticles] = useState([])
    const [pagination, setPagination] = useState()
    console.log(pagination)
    //const currentPage = pagination.page
    const clickTag = async (e) => {
        const selectedTag = e.target.innerText.replace(/#/g, '')
        setSelectedChip(selectedTag)
        const filterResult = await filterTag(selectedTag)
        //console.log(filterResult.data)
        setFilteredArticles(filterResult.data)
        setPagination(filterResult.pagination)
    }

    const loadMore = async (e) => {

    }
    return (
        <Container maxWidth={'xl'} disableGutters>
            <Head>
                <title>标签</title>
                <meta name="description" content="Generated by Guo Liang"/>
                <link rel="icon" href="/favicon.ico"/>
            </Head>
            <HeaderBlock/>
            <Layout>
                <Grid container spacing={2} justifyContent={'center'} className={styles.tagsContainer}>
                    {topTags.map(tag => {

                        const numberIcon =
                            <div className={styles.tagIcon}>
                                {tag.usedTime}
                            </div>

                        return (
                            <Grid item key={tag.id}>
                                <Chip variant={selectedChip === tag.tagName ? "filled" : "outlined"}
                                      color={selectedChip === tag.tagName ? "info" : "default"}
                                      label={`${tag.tagName}`} icon={numberIcon} onClick={clickTag} id={tag.id}
                                      href={"#filterResult"}/>
                            </Grid>
                        )
                    })}
                </Grid>
                <Grid container justifyContent={'flex-start'} className={styles.filterResultContainer} columnSpacing={4}
                      rowSpacing={4} id={'filterResult'} name={'filterResult'}>
                    {filteredArticles.map(article => (
                        <Grid item key={article.id} md={4}>
                            <Paper elevation={8} className={styles.article}>
                                <div className={styles.cover}>
                                    <Image src={`${process.env.API_BASE_URL}${article.cover}`} width={'100%'}
                                           height={'100%'}
                                           layout={'responsive'} objectFit={'cover'} alt={`${article.title}`}
                                           loading={'lazy'}/>
                                </div>
                                <div className={styles.articleInfo}>
                                    <div className={styles.category}>
                                        {article.category}
                                    </div>
                                    <Link href={`/articles/${article.slug}`} className={styles.title}
                                          color={'inherit'} underline={'hover'}>
                                        {article.title}
                                    </Link>
                                    <div className={styles.description}>
                                        {article.description}
                                    </div>
                                </div>
                            </Paper>
                        </Grid>
                    ))}

                </Grid>
                <Button onClick={loadMore}>查看更多</Button>
            </Layout>
        </Container>
    )
}


export async function getServerSideProps() {
    const tags = await getAllTags()
    return {
        props: {
            tags: tags
        }
    }
}