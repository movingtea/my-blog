import Link from 'next/link';
import styles from '../styles/Home.module.css'
import {getArticlesData} from "../libs/articles";
import HeaderBlock from "../compontents/HeaderBlock/HeaderBlock";
import {Button, Grid, useMediaQuery} from "@mui/material";
import {useState} from "react";
import Head from "next/head";
import MobileMenu from "../compontents/MobileMenu/MobileMenu";
import ArticlesList from "../compontents/ArticlesList/ArticlesList";
// import qs from "qs";
// import axios from "axios";

export default function Articles(pageData) {
    let articlesData = JSON.parse(pageData.res).data
    let pagination = JSON.parse(pageData.res).pagination
    const [data, setData] = useState(articlesData)
    const loadMore = async () => {
        const res = await getArticlesData(pagination.page + 1)
        pagination = JSON.parse(res).pagination
        setData(articlesData.concat(JSON.parse(res).data))
    }

    const headerPost = articlesData[0]

    //to-do
    // const categories = [...new Set(data.map(article=>{
    //     return article.category
    // }))]
    //
    // console.log(categories)
    //
    // const showCategoryArticle = async (e)=>{
    //     const queryText = e.target.textContent
    //     const result = (await filterCategory(queryText)).data
    //     setData(result)
    //     console.log(result)
    // }

    return (
        <div className={styles.container}>
            <Head>
                <title>Generated by Guo Liang</title>
                <meta name="description" content="Generated by Guo Liang"/>
                <link rel="icon" href="/favicon.ico"/>
            </Head>
            <div className={styles.pageBody}>
                <HeaderBlock/>
                <div className={styles.headerPost}
                     style={{
                         background: `url(${process.env.API_BASE_URL}${headerPost.cover}) no-repeat`,
                         backgroundSize: 'cover',
                         backgroundPosition: 'center'
                     }}>
                    <Grid className={styles.mobileMenu}>
                        <MobileMenu/>
                    </Grid>
                    <div className={styles.headerPostContent}>
                        <div className={styles.featuredCategory}>
                            {headerPost.category}
                        </div>
                        <Link href={`/articles/${headerPost.slug}`}>
                            <a className={styles.featuredTitle}>{headerPost.title}</a>
                        </Link>
                        {useMediaQuery('(max-width: 600px)')
                            ? <></>
                            : <>
                                <div className={styles.publishedDate}>
                                    {headerPost.publishedAt}
                                </div>
                                <div className={styles.articleDesc}>{headerPost.description}</div>
                            </>
                        }
                    </div>
                </div>
                <ArticlesList articles={data.slice(1, 4)}/>
                <div className={styles.middlePost}
                     style={{
                         background: `url(${process.env.API_BASE_URL}${data[4].cover}) no-repeat`,
                         backgroundSize: 'cover',
                     }}>
                    <div className={styles.middlePostContent}>
                        <div className={styles.featuredCategory}>
                            {data[4].category}
                        </div>
                        <Link href={`/articles/${headerPost.slug}`}>
                            <a className={styles.featuredTitle}>{data[4].title}</a>
                        </Link>
                        <div className={styles.publishedDate}>
                            {data[4].publishedAt}
                        </div>
                        <div className={styles.articleDesc}>{data[4].description}</div>
                    </div>
                </div>
                <ArticlesList articles={data.slice(5)}/>
                {/*<div className={styles.bottomContainer}>*/}
                {/*    <div>*/}
                {/*        {data.slice(5).map(article => (*/}
                {/*            <div key={data.indexOf(article)} className={styles.bottomArticle}>*/}
                {/*                <div  className={styles.bottomArticleCover} style={{*/}
                {/*                    background: `url(${process.env.API_BASE_URL}${article.cover}) no-repeat`,*/}
                {/*                    backgroundSize: 'cover',*/}
                {/*                    backgroundPosition: 'center'*/}
                {/*                }}/>*/}
                {/*                <div className={styles.bottomArticleContent}>*/}
                {/*                    <div className={styles.featuredCategory}>*/}
                {/*                        {article.category}*/}
                {/*                    </div>*/}
                {/*                    <Link href={`/articles/${article.slug}`}>*/}
                {/*                        <a className={styles.halfWidthContentTitle}>{article.title}</a>*/}
                {/*                    </Link>*/}
                {/*                    <div className={styles.publishDate}>*/}
                {/*                        {article.publishedAt}*/}
                {/*                    </div>*/}
                {/*                    <p className={styles.bottomArticleDesc}>{article.description}</p>*/}
                {/*                </div>*/}
                {/*            </div>*/}
                {/*        ))}*/}
                {/*    </div>*/}
                {/*    to-do*/}
                {/*    <div>*/}
                {/*        <div className={styles.categoryHeader}>类别：</div>*/}
                {/*        {categories.map(category => (*/}
                {/*            <div key={categories.indexOf(category)} className={styles.category} onClick={showCategoryArticle}>*/}
                {/*                {category}*/}
                {/*            </div>*/}
                {/*            ))}*/}
                {/*    </div>*/}
                {/*</div>*/}
                {data.length < pagination.total ? <Button onClick={loadMore}>查看更多文章</Button> : <></>}
            </div>
        </div>
    )
}

export async function getServerSideProps() {
    const res = await getArticlesData()
    return {
        props: {res}
    }
}