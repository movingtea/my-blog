import styles from '../../styles/[slug].module.css'
import {getArticle, getArticleSlugs} from "../../libs/articles";
import {getNaviData} from "../../libs/navi";
import edjsHTML from 'editorjs-html'
import Head from "next/head";
import HeaderBlock from "../../compontents/HeaderBlock/HeaderBlock";
import FooterNavi from "../../compontents/FooterNavi/FooterNavi";


export default function Article(article) {
    //console.log('lala',article)
    const articleData = JSON.parse(article.data)
    const edjsParser = edjsHTML()
    const naviData = article.naviData

    return (
        <div className={styles.container}>
            <Head>
                <title>Generated by Guo Liang</title>
                <meta name="description" content="Generated by Guo Liang"/>
                <link rel="icon" href="/favicon.ico"/>
            </Head>
            <div className={styles.pageBody}>
                <HeaderBlock/>
                <main>
                    <img className={styles.cover} src={`${process.env.API_BASE_URL}${articleData.cover}`}
                         loading={'lazy'}/>
                    <div className={styles.article}>
                        <h1 className={styles.title}>
                            {articleData.title}
                        </h1>
                        <div className={styles.publishedTime}>
                            {articleData.publishedAt}
                        </div>
                        <div className={styles.category}>
                            {articleData.category}
                        </div>
                        <div className={styles.content}
                             dangerouslySetInnerHTML={{__html: edjsParser.parse(JSON.parse(articleData.content)).join('')}}/>
                    </div>
                </main>
                <footer className={styles.footer}>
                    <FooterNavi naviData={naviData}/>
                </footer>
            </div>
        </div>
    )
}

export async function getStaticPaths() {
    const paths = await getArticleSlugs()
    return {
        paths,
        fallback: false
    }
}

export async function getStaticProps({params}) {
    const data = await getArticle(params.slug)
    const naviData = await getNaviData(params.slug)
    //console.log(naviData)
    return {
        props: {
            data: data,
            naviData: naviData
        }
    }
}